#!/usr/bin/env node

const commander = require('commander');
const program = new commander.Command();
const chalk = require('chalk');
const inquirer = require('inquirer');
const start = require('../lib/start');
const version = require('../package.json').version;

function getValue(value) {
  return value;
}

// 版本
program
  .version(version, '-v, --VERSION')
  .option('-u, --url <string>', '[required] website url you want to fetch', getValue)
  .option(
    '-wtc, --wait-time-close <number>',
    '[optional] wait time to close the browser when fetching, default 30s',
    getValue
  )
  .parse(process.argv);

// if (!program.args.length) program.help();

const url = program.url;
const wtc = program.waitTimeClose;

const reg = new RegExp(
  /^(?=^.{3,255}$)(http(s)?:\/\/)?(www\.)?[a-zA-Z0-9][-a-zA-Z0-9]{0,62}(\.[a-zA-Z0-9][-a-zA-Z0-9]{0,62})+(:\d+)*(\/\w+\.\w+)*([\?&]\w+=\w*)*$/
);
const errMsg = '😁 You need to provide a valid url! ';

if (!url) {
  // program.help();
  inquirer
    .prompt([
      {
        type: 'input',
        name: 'url',
        message: 'Please enter url: ',
        validate(input) {
          if (!reg.test(input)) {
            console.log();
            console.log(chalk.red(errMsg));
            return false;
          }
          return true;
        }
      }
    ])
    .then(({ url }) => {
      start(url);
    });
} else if (!reg.test(url)) {
  console.log();
  console.log(chalk.red(errMsg));
} else {
  start(url, wtc);
}
